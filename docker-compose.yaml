version: '3'
services:
  postgres:
    image: postgres:14-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: my_database
      PGDATA: /mount/data  # tells postgres where to store the database
    # expose:
    #   - 5432
    ports:
      - 127.0.0.1:5432:5432
    volumes:
      - ./data/postgres:/mount/data                                        # store actual db data
      - ./data/postgres-dump:/mount/dump                                   # store db dumps / backups
      - ./data/init-database.sql:/docker-entrypoint-initdb.d/init-database.sql  # init script, when container starts and db is empty

  # Authentication disabled
  pgadmin:
    image: dpage/pgadmin4
    user: root
    depends_on:
      - postgres
    environment:
      PGADMIN_DEFAULT_EMAIL: root@root.root
      PGADMIN_DEFAULT_PASSWORD: root
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    ports:
      - 127.0.0.1:5433:80
    volumes:
      - ./data/pgadmin:/var/lib/pgadmin

   # Frontend server
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    depends_on:
      - backend
    ports:
      - 127.0.0.1:3000:3000

  # Development
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    depends_on:
      - postgres
      - pgadmin
    environment:
      PGHOST: postgres  # localhost?
      PGPORT: 5432
      PGUSER: postgres
      PGPASSWORD: postgres
      PGDATABASE: my_database
    ports:
      - 8080:8080
    