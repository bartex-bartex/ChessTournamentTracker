# # Use the official Node.js image as a base
# FROM node:16-alpine

# # Set the working directory in the container
# WORKDIR /app

# # Copy package.json and yarn.lock to the container
# COPY ./frontend/package.json ./frontend/yarn.lock ./

# # Install the dependencies
# RUN yarn install

# # Copy the rest of the application code to the container
# # COPY ./frontend/public ./public
# # COPY ./frontend/src ./src
# COPY ./frontend ./


# # Expose the port that the frontend will run on
# EXPOSE 3000

# # Start the frontend application
# CMD ["yarn", "start"]

# Use the official Node.js image as a base for building
FROM node:16-alpine AS build

# Set the working directory in the container
WORKDIR /app

# Copy package.json and yarn.lock to the container
COPY ./frontend/package.json ./frontend/yarn.lock ./

# Install the dependencies
RUN yarn install

# Copy the rest of the application code to the container
COPY ./frontend ./

ENV REACT_APP_BACKEND_URL="https://chess-tournament-tracker-api.bartoszwarchol.pl"

# Build the application
RUN yarn build

# Use Nginx as a base for serving the built static files
FROM nginx:stable-alpine

# Copy the build output from the previous stage to Nginx's HTML directory
COPY --from=build /app/build /usr/share/nginx/html

# ENV PORT=9999
COPY ./frontend/nginx.conf /etc/nginx/conf.d/default.conf

# Expose port $PORT for the server -> NO GOOD?
# EXPOSE $PORT

# Start Nginx with replaced $PORT
CMD sed -i -e 's/$PORT/'"$PORT"'/g' /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'
